# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tags:
        description: 'Manual trigger'

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest flake8
    - name: Install package
      run: |
        python -m pip install -e .
    - name: Create configuration file
      run: |
        printf 'API_URL = "${{ secrets.QUALTRICS_API_URL }}"\nAPI_TOKEN = "${{ secrets.QUALTRICS_API_TOKEN }}"' > ~/.qualtrutils/qualtrics.toml
    - name: Run flake8
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Run tests (pytest)
      run: pytest
      
      
  documentation:
    runs-on: ubuntu-latest
    needs: tests
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pdoc3
        pip install -e .
    - name: Generate documentation (pdoc3)
      run: |
        pdoc --html --force --output-dir docs --template-dir docs/templates .
    - name: Commit changes to documentation
      uses: EndBug/add-and-commit@v7
      with:
        author_name: GitHub Actions
        message: 'Update to documentation'
        add: 'docs'
        branch: master
        
  testpypi:
    runs-on: ubuntu-latest
    needs: [documentation, tests]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install -e .
    - name: Build package
      run: python -m build
    - name: Publish package on PyPi Test
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPITEST_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        
        
  pypi:
    runs-on: ubuntu-latest
    needs: [documentation, testpypi, tests]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install -e .
    - name: Build package
      run: python -m build
    - name: Publish package on PyPi (Production)
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        
  conda:
    runs-on: ${{ matrix.os }}
    needs: [documentation, pypi, tests]
    
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        pythonVersion: [3.6, 3.7, 3.8, 3.9]
        
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.pythonVersion }}
    - name: Install dependencies
      run: |
        conda install jinja2
        conda install conda-build anaconda-client
    - name: Generate metadata for conda
      run: python meta.py
    - name: Build & Upload
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        conda config --set anaconda_upload yes
        conda build .     
        
